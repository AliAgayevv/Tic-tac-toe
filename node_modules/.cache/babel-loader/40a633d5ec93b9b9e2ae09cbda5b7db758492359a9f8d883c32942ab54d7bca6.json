{"ast":null,"code":"var _jsxFileName = \"/Users/ali.agayevh/Documents/Programming/Web-development/REACT/tic-tac-toe/src/components/Tic_Tac_Toe.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n//  Hər biri xana dəyər və onclick funksiyası ilə təyin olunur, return dəyəri olaraq düymə qaytarılır, bunu etmə səbəbimiz onClick istifadəsi daha rahat olsun deyədir. Düymə içinə əlavə ediləcək dəyər Square funksiyasına ötürülən value dir.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    className: \"square\",\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nexport default function TicTacToe() {\n  _s();\n  //  Oyun xanaları üçün state\n  const [squares, setSquares] = useState(Array(9).fill(\"\"));\n  // Oynama növbəsinin təyini üçün state\n  const [isXTurn, setIsXTurn] = useState(true);\n  // Qalibiyyət, bərabərlik vəya davam təyini üçün state\n  const [status, setStatus] = useState(\"\");\n\n  // Qalibin təyini üçün funksiya, eyni zamanda \n  function getWinner(squares) {\n    const winningPatterns = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [2, 5, 8], [0, 4, 8], [2, 4, 6], [0, 3, 6], [1, 4, 7]];\n    for (let i = 0; i < winningPatterns.length; i++) {\n      const [x, y, z] = winningPatterns[i];\n      if (squares[x] && squares[x] === squares[y] && squares[x] === squares[z]) {\n        return squares[x];\n      }\n    }\n    return null;\n  }\n\n  // İstifadəçi restart düyməsinə basdığda növbə X a təyin edilir və bütün xanalar setSqaures funksiyası vasitəsiylə boş xanaya yəni \"\" çevrilir.\n\n  function handleRestart() {\n    setIsXTurn(true);\n    setSquares(Array(9).fill(\"\"));\n  }\n\n  //  Hər dəfə squares vəya isXTurn stateləri dəyişəndə bu effect işə düşür və 3 hala baxır. \n  //  1. Əgər getWinner null qaytarırsa və bütün xanalar doludursa(yəni boşdan fərqlidirsə: squares.every((item) => item !== \"\")) bərabərlik halı aktiv olur\n  //  2. Əgər getWinner null qaytarmırsa (yəni qalibi təyin edirsə) o zaman status getWinner funksiyasından qayıdan oyunçu (yəni X vəya O) qalib təyin edilir\n  //  3. Yuxarıdaki şərtlərin heçbiri ödənməyəndə deməkki hər hansı bərabərlik vəya qalibiyyət halı yoxdur, oyun davam edir və oynama növbəsinin kimdə olduğu statusa təyin edilir.\n\n  useEffect(() => {\n    if (!getWinner(squares) && squares.every(item => item !== \"\")) {\n      setStatus(\"Draw\");\n    } else if (getWinner(squares)) {\n      setStatus(`Winner is ${getWinner(squares)}`);\n    } else {\n      setStatus(`Next player is ${isXTurn ? \"X\" : \"O\"}`);\n    }\n  }, [squares, isXTurn]);\n  function handleClick(getCurrentSquare) {\n    let cpySquares = [...squares];\n    if (getWinner(cpySquares) || cpySquares[getCurrentSquare]) return;\n    cpySquares[getCurrentSquare] = isXTurn ? \"X\" : \"O\";\n    setIsXTurn(!isXTurn);\n    setSquares(cpySquares);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tic-tac-toe-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestart,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"LHJynaJ2QIPOfpLHIpF3Pm9FIX8=\");\n_c2 = TicTacToe;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"TicTacToe\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Square","value","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","TicTacToe","_s","squares","setSquares","Array","fill","isXTurn","setIsXTurn","status","setStatus","getWinner","winningPatterns","i","length","x","y","z","handleRestart","every","item","handleClick","getCurrentSquare","cpySquares","_c2","$RefreshReg$"],"sources":["/Users/ali.agayevh/Documents/Programming/Web-development/REACT/tic-tac-toe/src/components/Tic_Tac_Toe.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n//  Hər biri xana dəyər və onclick funksiyası ilə təyin olunur, return dəyəri olaraq düymə qaytarılır, bunu etmə səbəbimiz onClick istifadəsi daha rahat olsun deyədir. Düymə içinə əlavə ediləcək dəyər Square funksiyasına ötürülən value dir.\n\nfunction Square({ value, onClick }) {\n  return (\n    <button onClick={onClick} className=\"square\">\n      {value}\n    </button>\n  );\n}\n\nexport default function TicTacToe() {\n//  Oyun xanaları üçün state\n  const [squares, setSquares] = useState(Array(9).fill(\"\"));\n// Oynama növbəsinin təyini üçün state\n  const [isXTurn, setIsXTurn] = useState(true);\n// Qalibiyyət, bərabərlik vəya davam təyini üçün state\n  const [status, setStatus] = useState(\"\");\n\n  // Qalibin təyini üçün funksiya, eyni zamanda \n  function getWinner(squares) {\n    const winningPatterns = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n      [0, 3, 6],\n      [1, 4, 7],\n    ];\n\n    for (let i = 0; i < winningPatterns.length; i++) {\n      const [x, y, z] = winningPatterns[i];\n\n      if (\n        squares[x] &&\n        squares[x] === squares[y] &&\n        squares[x] === squares[z]\n      ) {\n        return squares[x];\n      }\n    }\n    return null;\n  }\n\n  // İstifadəçi restart düyməsinə basdığda növbə X a təyin edilir və bütün xanalar setSqaures funksiyası vasitəsiylə boş xanaya yəni \"\" çevrilir.\n\n  function handleRestart() {\n    setIsXTurn(true);\n    setSquares(Array(9).fill(\"\"));\n  }\n\n//  Hər dəfə squares vəya isXTurn stateləri dəyişəndə bu effect işə düşür və 3 hala baxır. \n//  1. Əgər getWinner null qaytarırsa və bütün xanalar doludursa(yəni boşdan fərqlidirsə: squares.every((item) => item !== \"\")) bərabərlik halı aktiv olur\n//  2. Əgər getWinner null qaytarmırsa (yəni qalibi təyin edirsə) o zaman status getWinner funksiyasından qayıdan oyunçu (yəni X vəya O) qalib təyin edilir\n//  3. Yuxarıdaki şərtlərin heçbiri ödənməyəndə deməkki hər hansı bərabərlik vəya qalibiyyət halı yoxdur, oyun davam edir və oynama növbəsinin kimdə olduğu statusa təyin edilir.\n\n  useEffect(() => {\n    if (!getWinner(squares) && squares.every((item) => item !== \"\")) {\n      setStatus(\"Draw\");\n    } else if (getWinner(squares)) {\n      setStatus(`Winner is ${getWinner(squares)}`);\n    } else {\n      setStatus(`Next player is ${isXTurn ? \"X\" : \"O\"}`);\n    }\n  }, [squares, isXTurn]);\n\n  function handleClick(getCurrentSquare) {\n    let cpySquares = [...squares];\n    if (getWinner(cpySquares) || cpySquares[getCurrentSquare]) return;\n    cpySquares[getCurrentSquare] = isXTurn ? \"X\" : \"O\";\n    setIsXTurn(!isXTurn);\n    setSquares(cpySquares);\n  }\n\n  return (\n    <div className=\"tic-tac-toe-container\">\n      <div className=\"row\">\n        <Square value={squares[0]} onClick={() => handleClick(0)} />\n        <Square value={squares[1]} onClick={() => handleClick(1)} />\n        <Square value={squares[2]} onClick={() => handleClick(2)} />\n      </div>\n      <div className=\"row\">\n        <Square value={squares[3]} onClick={() => handleClick(3)} />\n        <Square value={squares[4]} onClick={() => handleClick(4)} />\n        <Square value={squares[5]} onClick={() => handleClick(5)} />\n      </div>\n      <div className=\"row\">\n        <Square value={squares[6]} onClick={() => handleClick(6)} />\n        <Square value={squares[7]} onClick={() => handleClick(7)} />\n        <Square value={squares[8]} onClick={() => handleClick(8)} />\n      </div>\n      <h1>{status}</h1>\n      <button onClick={handleRestart}>Restart</button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}